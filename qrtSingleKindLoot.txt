scn qrtSingleKindLootFunction

int itemType
ref tryLootHelper
ref rActor
int isLegal
ref base
int tempCount
int isInDistance
int isPlayerDropped
int destinationInfo
int isShowMessage

Begin Function { itemType, destinationInfo, isShowMessage}
	;get which place to store
	if destinationInfo==1
		set tryLootHelper to player
	elseif destinationInfo==2
		set tryLootHelper to qrtLootHelper
	endif
	;main process
	set rActor to GetFirstRef itemType
	while rActor != 0
		;check the distance
		let isInDistance := call qrtLootDistanceCheckScript rActor
		if isInDistance==0
			set rActor to GetNextRef
			continue
		endif
		;check if dropped by player
		if qrtGlobalMCMVariable.isPickPlayerDroppedItems==0
			let isPlayerDropped := GetSourceModIndex rActor ==255
			if isPlayerDropped
				set rActor to GetNextRef
				continue
			endif
		endif
		;check if playable
		if qrtGlobalMCMVariable.isPickUnPlayableItem==0
			if IsPlayable rActor==0
				set rActor to GetNextRef
				continue
			endif
		endif
		let isLegal := call qrtIsLegalToPickUpFunction rActor
		if isLegal==0
			set rActor to GetNextRef
			continue
		endif
		;all condition checked, loot now
		set tempCount to rActor.GetRefCount
		rActor.activate tryLootHelper
		let tempCount -= 1
		set base to rActor.GetBaseObject
		tryLootHelper.addItem base tempCount 1
		;messageex "owner= %n, cellOwner=%n" owner, cellOwner
		;show message or not
		if isShowMessage
			messageex "%n looted" rActor
		endif
		;next item
		set rActor to GetNextRef
	loop
End 